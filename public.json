{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Azure Standard Public API",
    "description": "The public API behind Azure's website",
    "contact": {
      "name": "Azure Standard Customer Service",
      "email": "info@azurestandard.com",
      "url": "https://azurestandard.com/customer-service"
    },
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    }
  },
  "host": "api.azurestandard.com",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/drops": {
      "get": {
        "summary": "Returns all drops from the system that the user has access to",
        "operationId": "findDrops",
        "tags": [
          "drop"
        ],
        "parameters": [
          {
            "name": "route",
            "in": "query",
            "description": "route names to filter by",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "trip",
            "in": "query",
            "description": "trip IDs to filter by",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "person",
            "in": "query",
            "description": "person IDs to filter by",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of results to return",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "drop response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/drop"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          }
        }
      }
    },
    "/drop/{id}": {
      "get": {
        "summary": "Returns a drop based on a single ID, if the user has access to the drop",
        "operationId": "findDropById",
        "tags": [
          "drop"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of drop to fetch",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "drop response",
            "schema": {
              "$ref": "#/definitions/drop"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          }
        }
      }
    },
    "/routes": {
      "get": {
        "summary": "Returns all routes from the system that the user has access to",
        "operationId": "findRoutes",
        "tags": [
          "route"
        ],
        "parameters": [
          {
            "name": "drop",
            "in": "query",
            "description": "drop IDs to filter by",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of results to return",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "route response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/route"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          }
        }
      }
    },
    "/route/{name}": {
      "get": {
        "summary": "Returns a route based on a single ID, if the user has access to the route",
        "operationId": "findRouteById",
        "tags": [
          "route"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name of route to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "route response",
            "schema": {
              "$ref": "#/definitions/route"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          }
        }
      }
    },
    "/trips": {
      "get": {
        "summary": "Returns all trips from the system that the user has access to",
        "operationId": "findTrips",
        "tags": [
          "trip"
        ],
        "parameters": [
          {
            "name": "route",
            "in": "query",
            "description": "route names to filter by",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "drop",
            "in": "query",
            "description": "drop IDs to filter by",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of results to return",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "trip response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/trip"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          }
        }
      }
    },
    "/trip/{id}": {
      "get": {
        "summary": "Returns a trip based on a single ID, if the user has access to the trip",
        "operationId": "findTripById",
        "tags": [
          "trip"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of trip to fetch",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "trip response",
            "schema": {
              "$ref": "#/definitions/trip"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "Returns all products from the system that the user has access to",
        "operationId": "findProducts",
        "tags": [
          "product"
        ],
        "parameters": [
          {
            "name": "brand",
            "in": "query",
            "description": "brand IDs to filter by",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of results to return",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "product response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/product"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          }
        }
      }
    },
    "/product/{code}": {
      "get": {
        "summary": "Returns a product based on a single ID, if the user has access to the product",
        "operationId": "findProductById",
        "tags": [
          "product"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code of product to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "product response",
            "schema": {
              "$ref": "#/definitions/product"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          }
        }
      }
    },
    "/people": {
      "get": {
        "summary": "Returns all people from the system that the user has access to",
        "operationId": "findPeople",
        "tags": [
          "person"
        ],
        "parameters": [
          {
            "name": "drop",
            "in": "query",
            "description": "drop IDs to filter by",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of results to return",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "person response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/person"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          }
        }
      }
    },
    "/person/{id}": {
      "get": {
        "summary": "Returns a person based on a single ID, if the user has access to the person",
        "operationId": "findPersonById",
        "tags": [
          "person"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of person to fetch",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "person response",
            "schema": {
              "$ref": "#/definitions/person"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          }
        }
      }
    },
    "/person": {
      "get": {
        "summary": "Returns the authenticated person (yourself)",
        "operationId": "findPersonByAuth",
        "tags": [
          "person"
        ],
        "responses": {
          "200": {
            "description": "person response",
            "schema": {
              "$ref": "#/definitions/person"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "drop": {
      "description": "an order-delivery location",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/address"
        },
        "geo": {
          "$ref": "#/definitions/geo"
        },
        "exclusivity": {
          "type": "string",
          "enum": [
            "open",
            "semi-open",
            "closed"
          ]
        },
        "order-frequency": {
          "description": "order counts for this drop over the past year",
          "type": "object",
          "properties": {
            "orders": {
              "description": "count of orders for this route-trip-drop",
              "type": "integer",
              "format": "int32"
            },
            "cutoff": {
              "description": "cutoff date for this route-trip",
              "type": "string",
              "format": "date"
            }
          }
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "route": {
      "description": "an order-delivery truck route",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "cutoff-frequency": {
          "description": "number of days between cutoffs",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "name",
        "cutoff-frequency"
      ]
    },
    "trip": {
      "description": "a truck delivering orders along a route",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "route": {
          "description": "name of the followed route",
          "type": "string"
        },
        "cutoff": {
          "description": "cutoff for placing orders on this trip",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "route",
        "cutoff"
      ]
    },
    "product": {
      "description": "a product available for sale",
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "name": {
          "description": "sentence-length product name",
          "type": "string"
        },
        "description": {
          "description": "long-form product description",
          "type": "string"
        },
        "brand": {
          "$ref": "#/definitions/brand"
        },
        "size": {
          "description": "size of the product (e.g. 12 oz., or 6x12 oz.)",
          "type": "string"
        },
        "price": {
          "#ref": "#/definitions/price"
        },
        "stock": {
          "description": "amount of stock available for purchase",
          "type": "integer",
          "format": "int32"
        },
        "favorites": {
          "description": "number of customers who've marked this product as a favorite",
          "type": "integer",
          "format": "int32"
        },
        "images": {
          "type": "array",
          "items": {
            "description": "URL for a picture of this product",
            "type": "string"
          }
        },
        "repackaged": {
          "description": "product codes for alternative packaging",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "code",
        "name",
        "size",
        "price"
      ]
    },
    "brand": {
      "description": "a brand which may be associated with several products",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "description": "homepage for the brand",
          "type": "string",
          "format": "url"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "price": {
      "description": "product price information"
      "type": "object",
      "properties": {
        "dollars": {
          "description": "price of the product in dollars",
          "type": "number",
          "format": "float"
        },
        "per-pound": {
          "description": "whether the price is per-pound or per-unit"
          "type": "boolean"
        },
        "discount": {
          "description": "text for the discount (e.g. \"12%\", or \"$3.50\"",
          "type": "string"
        }
      }
      "required": [
        "dollars"
      ]
    }
    "person": {
      "description": "a person (customer, vendor, employee, ...)",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "address": {
      "description": "an address following the convention of http://microformats.org/wiki/hcard",
      "type": "object",
      "properties": {
        "post-office-box": {
          "type": "string"
        },
        "extended-address": {
          "type": "string"
        },
        "street-address": {
          "type": "string"
        },
        "locality":{
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "postal-code": {
          "type": "string"
        },
        "country-name": {
          "type": "string"
        }
      },
      "required": [
        "locality",
        "region",
        "country-name"
      ]
    },
    "geo": {
      "description": "a geographical coordinate",
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "format": "float"
        },
        "longitude": {
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "latitude",
        "longitude"
      ]
    },
    "errorModel": {
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
